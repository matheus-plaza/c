/*1*/
#include <stdio.h>
int main()
{

int vetor[6], i;
    
    for(i=0; i<6; i++){
        printf("digite o %dº valor: ", i + 1);
        scanf("%d", &vetor[i]);
    }
    
    printf("os valores de traz para frente ficam:\n");

    
    for(i=5; i>=0; i--){
        printf("%d\n", vetor[i]);
    }    
    
    return 0;

}

/* 2*/
#include <stdio.h>
int main()
{

int vetor[5], i;
    
    for(i=0; i<5; i++){
        printf("digite o %dº valor: ", i + 1);
        scanf("%d", &vetor[i]);
    }
    
    printf("a ordem valores de traz para frente ficam:\n");

    
    for(i=4; i>=0; i--){
        printf("%d\n", vetor[i]);
    }    
    
    return 0;

}

/*3 */
#include <stdio.h>
int main()
{

int vetor[10], i, verificacao;
    
    for(i=0; i<10; i++){
        printf("digite o %dº valor: ", i + 1);
        scanf("%d", &vetor[i]);
    }
    
    for(i=0; i<10; i++){
        
        if(vetor[i] % 2 == 0){
           verificacao++;
        }
    }    
    
    printf("A quantia de valores pares são :%d\n", verificacao);

    return 0;

}

/*4*/
#include <stdio.h>
int main()
{

int vetor[10], i, maiorVetor=0, posicaoMaior=0;
    
    for(i=0; i<10; i++){
        printf("digite o %dº valor: ", i + 1);
        scanf("%d", &vetor[i]);
    
    
        if (vetor[i] > maiorVetor) {    
            maiorVetor = vetor[i];
            posicaoMaior = i;
        }
    }    
    
    printf("maiorVetor:%d\n", maiorVetor);
    printf("Posicao:%dº", posicaoMaior + 1);

    return 0;

}

/*5 */
#include <stdio.h>
int main()
{

int vetor[5], vetor2[5], vetor3[5], i;
    
    for(i=0; i<5; i++){
    printf("digite o %dº valor do 1º vetor: ", i + 1);
    scanf("%d", &vetor[i]);
    }
    printf("\n");         
    for(i=0; i<5; i++){
        printf("digite o %dº valor do 2º vetor: ", i + 1);
        scanf("%d", &vetor2[i]);
    }
    printf("\n");         
    
    for(i=0; i<5; i++){
        vetor3[i] = vetor[i] + vetor2[i];
        
        printf("valor do elemento %d do 1º vetor + elemento %d do 2º vetor =%d\n", i + 1, i + 1, vetor3[i]);
    }    

    return 0;

}
